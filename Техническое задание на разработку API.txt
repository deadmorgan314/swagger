Техническое задание на разработку API для добавления пользователя в лист исключений

1. Общие сведения
Название проекта: API управления доступом пользователей.
Цель задачи: Разработка нового эндпоинта для добавления пользователей в лист исключений.
Исполнитель: Команда разработчиков.

2. Цель и описание функциональности
Цель: Реализовать новый эндпоинт API, который позволит администратору добавлять пользователей в список исключений (черный список) для ограничения их доступа к функциональности системы (например, блокировка возможности оформления заказов, доступа к личному кабинету и т.д.).
Описание функциональности:
API должен позволять администратору добавить пользователя в лист исключений, используя идентификатор пользователя (ID) и причину блокировки.
Запись в лист исключений должна сохраняться в базе данных с указанием даты и времени добавления.

3. Требования к эндпоинту
3.1. HTTP метод и URL
Метод: POST
URL: /api/v1/blacklist

Описание: API добавляет пользователя в список исключений на основе предоставленного ID пользователя и причины блокировки.
3.2. Запрос
Требуемые параметры запроса (Body):
user_id (обязательный): идентификатор пользователя (целое число).
reason (опциональный): причина блокировки (строка, длина до 255 символов).

Пример запроса:
http POST /api/v1/blacklist
Content-Type: application/json
Authorization: Bearer <admin_token>

{
  "user_id": 123,
  "reason": "Несанкционированные попытки доступа"
}
3.3. Ответ
Код ответа: 200 OK (при успешном добавлении пользователя в лист исключений).
Тело ответа (в формате JSON):
json
{
  "message": "Пользователь успешно добавлен в список исключений",
  "user_id": 123,
  "blacklisted_at": "2024-10-10T10:00:00Z",
  "reason": "Несанкционированные попытки доступа"
}
Описание полей ответа:
message: сообщение об успешном добавлении в черный список.
user_id: идентификатор пользователя, который был добавлен в черный список.
blacklisted_at: дата и время добавления пользователя в черный список (в формате ISO 8601).
reason: причина блокировки (если была указана).

Ошибки и коды ответа:
400 Bad Request: если не передан обязательный параметр user_id или передан некорректный тип данных.
401 Unauthorized: если запрос сделан без токена администратора или токен неверен.
404 Not Found: если пользователь с указанным user_id не найден.
500 Internal Server Error: в случае внутренней ошибки сервера.

4. Требования к безопасности
Эндпоинт должен быть доступен только администраторам системы.
Авторизация должна быть реализована через Bearer-токен (JWT).
Проверка прав доступа: только администраторы могут добавлять пользователей в черный список.

5. Тестирование
Функциональные тесты:
Проверка успешного добавления пользователя в список исключений.
Проверка корректности ошибки при отсутствии user_id.
Проверка ошибки при отсутствии прав (некорректный токен).
Проверка на защиту от повторного добавления:
Пользователь не может быть добавлен в черный список повторно.

6. Логирование
Все действия по добавлению пользователей в черный список должны логироваться, включая:
ID администратора, добавившего пользователя.
Дата и время добавления.
Причина (если указана).

7. План работ
Разработка логики добавления пользователя в лист исключений.
Реализация проверки прав доступа и валидности запроса.
Тестирование эндпоинта на различные сценарии.
Обновление документации и деплой.

8. Документация
Обновить существующую документацию API с описанием нового эндпоинта.
Добавить раздел с типичными ошибками и их обработкой.